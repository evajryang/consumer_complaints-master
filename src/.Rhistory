Boston <- read.csv("fy19fullpropassess.csv")
ptypes<-unique(Boston$LU)
Boston<-data.frame(Boston)
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
ui<-fluidPage(
titlePanel("Select metric for bar plot:"),
sidebarLayout(
sidebarPanel(
selectInput("var",
label = "Select variable",
choices = c("All records" = 1,
"Residential condominium unit" = 2, # Choices
"Residential 1-family" = 3,
"Residential 2-family"=4,
"Residential 3-family"=5,
"Condominium main"=6,
"Tax-exempt"=7,
"Residential land"=8,
"Condo parking"=9,
"Commercial"=10,
"Mixed use (res. and comm.)"=11,
"Residential 7 or more units"=12,
"Residential 4 or more family"=13,
"Commercial land"=14,
"Commercial condominium"=15,
"Tax-exempt (121A)"=16,
"Industrial"=17,
"Agricultural/Horticultural"=18),
selected = 1), # Default Selection
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 5000,
value = 50)
),
mainPanel(
plotOutput("BostonHist")
)
)
)
library(shiny)
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
completeFun(Boston, c("LU","ZIPCODE","PTYPE","GROSS_AREA","GROSS_TAX"))
ui<-fluidPage(
titlePanel("Select metric for bar plot:"),
sidebarLayout(
sidebarPanel(
selectInput("var",
label = "Select variable",
choices = c("All records" = 1,
"Residential condominium unit" = 2, # Choices
"Residential 1-family" = 3,
"Residential 2-family"=4,
"Residential 3-family"=5,
"Condominium main"=6,
"Tax-exempt"=7,
"Residential land"=8,
"Condo parking"=9,
"Commercial"=10,
"Mixed use (res. and comm.)"=11,
"Residential 7 or more units"=12,
"Residential 4 or more family"=13,
"Commercial land"=14,
"Commercial condominium"=15,
"Tax-exempt (121A)"=16,
"Industrial"=17,
"Agricultural/Horticultural"=18),
selected = 1), # Default Selection
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 5000,
value = 50)
),
mainPanel(
plotOutput("BostonHist")
)
)
)
Boston <- read.csv("fy19fullpropassess.csv")
runApp()
runApp()
